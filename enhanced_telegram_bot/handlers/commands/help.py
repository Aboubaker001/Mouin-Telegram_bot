"""
Help command handler for the Enhanced Telegram Bot
Provides comprehensive command documentation in Arabic
"""

import logging
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton

from config.settings import settings
from middlewares.auth import verified_required

logger = logging.getLogger(__name__)
router = Router()


def get_help_text() -> str:
    """Generate comprehensive help text in Arabic"""
    return f"""๐ ูุฑุญุจุงู ุจู ูู ุฏููู ุงููุณุงุนุฏุฉ ูุฏูุฑุฉ {settings.COURSE_NAME}

๐ ุงูุฃูุงูุฑ ุงููุชุงุญุฉ:

๐ฐ ุงูุฃูุงูุฑ ุงูุฃุณุงุณูุฉ:
/ุงุจุฏุฃ ุฃู /start - ุฑุณุงูุฉ ุงูุชุฑุญูุจ ูุจุฏุก ุงุณุชุฎุฏุงู ุงูุจูุช
/ูุณุงุนุฏุฉ ุฃู /help - ุนุฑุถ ูุฐู ุงููุงุฆูุฉ

๐ ุฃูุงูุฑ ุงููุญุชูู ูุงูุฏุฑูุณ:
/ุงููุญุชูู - ุนุฑุถ ููุงุฏ ุงูุฏูุฑุฉ (PDFsุ ููุฏูููุงุชุ ุฑูุงุจุท)
/ุงูุฌุฏูู - ุนุฑุถ ุฌุฏูู ุงููุญุงุถุฑุงุช ุงูุฃุณุจูุนู
/ุชุฐููุฑ - ุชูุนูู/ุฅูุบุงุก ุชุฐููุฑุงุช ุงูุฌูุณุงุช

โ ุงููุณุงุนุฏุฉ ูุงูุฏุนู:
/ุฃุณุฆูุฉ - ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ ูุงูุฅุฌุงุจุงุช
/ุชูููู - ุชูููู ุงูุฌูุณุฉ ุงูุฃุฎูุฑุฉ
/ุงุฎุชุจุงุฑ - ุงุฎุชุจุงุฑ ูุตูุฑ (3 ุฃุณุฆูุฉ)

๐ ุงูุฅุญุตุงุฆูุงุช:
/ุฅุญุตุงุฆูุงุช - ุนุฑุถ ุฅุญุตุงุฆูุงุช ุงููุฌููุนุฉ

๐จโ๐ผ ุฃูุงูุฑ ุงููุฏุฑุงุก ููุท:
/ูุดุฑ - ูุดุฑ ุฅุนูุงู ุฃู ุฑุณุงูุฉ ูููุฌููุนุฉ
/ูุชู - ูุชู ูุณุชุฎุฏู ููุชุฑุฉ ูุญุฏุฏุฉ
/ุชุญุฐูุฑ - ุฅุนุทุงุก ุชุญุฐูุฑ ููุณุชุฎุฏู

๐ฏ ูุนูููุงุช ูููุฏุฉ:
๐ ุฃูุงู ุงููุญุงุถุฑุงุช: {', '.join([day for day, config in settings.CLASS_SCHEDULE.items() if config['enabled']])}
โฐ ุชูููุช ุงููุญุงุถุฑุงุช: {settings.CLASS_SCHEDULE.get('ุงูุงุซููู', {}).get('time', 'ุบูุฑ ูุญุฏุฏ')}
๐ ุฑุงุจุท Zoom: {settings.ZOOM_LINK}
๐จโ๐ซ ุงููุฏุฑุจ: {settings.INSTRUCTOR_NAME}

๐ก ูุตุงุฆุญ:
โข ุงุณุชุฎุฏู ุงูุฃุฒุฑุงุฑ ุงูุชูุงุนููุฉ ูููุตูู ุงูุณุฑูุน
โข ุชุฃูุฏ ูู ุชูุนูู ุงูุฅุดุนุงุฑุงุช ูุชููู ุงูุชุฐููุฑุงุช
โข ุฑุงุฌุน ุงููุญุชูู ุจุงูุชุธุงู ูููุฑุงุฌุนุฉ

๐ ูููุณุงุนุฏุฉ ุงูุฅุถุงููุฉุ ุชูุงุตู ูุน ุงููุฏุฑุจ ูุจุงุดุฑุฉ."""


@router.message(Command("help", "ูุณุงุนุฏุฉ"))
async def help_command(message: Message, is_verified: bool):
    """Handle help command"""
    if not await verified_required(message, is_verified):
        return
    
    help_text = get_help_text()
    
    # Create navigation buttons
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="๐ ุงููุญุชูู", callback_data="show_content"),
            InlineKeyboardButton(text="๐ ุงูุฌุฏูู", callback_data="show_schedule")
        ],
        [
            InlineKeyboardButton(text="โ ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ", callback_data="show_faq"),
            InlineKeyboardButton(text="๐ ุงูุฅุญุตุงุฆูุงุช", callback_data="show_stats")
        ],
        [
            InlineKeyboardButton(text="๐ ุงูุนูุฏุฉ ูููุงุฆูุฉ ุงูุฑุฆูุณูุฉ", callback_data="back_to_main")
        ]
    ])
    
    await message.answer(help_text, reply_markup=keyboard)